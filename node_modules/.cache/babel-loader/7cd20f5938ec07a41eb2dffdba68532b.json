{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetch(url, {\n      signal: abortController.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error(\"Could not find data\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsLoading(false);\n      setError(null);\n    }).catch(e => {\n      if (e.name === \"AbortError\") {\n        console.log(\"aborted\");\n      } else {\n        setError(e.message);\n        setIsLoading(false);\n      }\n    });\n    return () => abortController.abort();\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n\n_s(useFetch, \"oHNKtHcXBLfWEYHeRSlN5KEv5w0=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/tom_exarhakis/new/test/src/Fetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isLoading","setIsLoading","error","setError","abortController","AbortController","fetch","signal","then","res","ok","Error","json","catch","e","name","console","log","message","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAC,IAAAA,KAAK,CAACT,GAAD,EAAM;AAAEU,MAAAA,MAAM,EAAEH,eAAe,CAACG;AAA1B,KAAN,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACb,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,cAAMC,KAAK,CAAC,qBAAD,CAAX;AACD;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,KANH,EAOGJ,IAPH,CAOSV,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAXH,EAYGU,KAZH,CAYUC,CAAD,IAAO;AACZ,UAAIA,CAAC,CAACC,IAAF,KAAW,YAAf,EAA6B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OAFD,MAEO;AACLd,QAAAA,QAAQ,CAACW,CAAC,CAACI,OAAH,CAAR;AACAjB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAnBH;AAoBA,WAAO,MAAMG,eAAe,CAACe,KAAhB,EAAb;AACD,GAvBQ,EAuBN,CAACtB,GAAD,CAvBM,CAAT;AAwBA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CA9BD;;GAAMN,Q;;AAgCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetch(url, { signal: abortController.signal })\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"Could not find data\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setData(data);\n        setIsLoading(false);\n        setError(null);\n      })\n      .catch((e) => {\n        if (e.name === \"AbortError\") {\n          console.log(\"aborted\");\n        } else {\n          setError(e.message);\n          setIsLoading(false);\n        }\n      });\n    return () => abortController.abort();\n  }, [url]);\n  return { data, isLoading, error };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}